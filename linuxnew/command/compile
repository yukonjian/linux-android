1.内核模块编译 Makefile
ARCH := arm
CROSS_COMPILE := /home/steven/work/lichee/out/sun8iw11p1/androidm/common/buildroot/external-toolchain/bin/arm-linux-gnueabi-
KERN_DIR = /home/steven/work/lichee/linux-3.10

all:
	make -C $(KERN_DIR) M=`pwd` ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE)  modules

clean:
	make -C $(KERN_DIR) M=`pwd` ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) modules clean

obj-m	+= sunxi_wdt.o

2.测试应用的编译 makefile
CC=xxx

OBJS=pcm_api.c  test.c

all:pcm_test

pcm_test: $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS)

clean:
	rm -f pcm_test *.o

$@--目标文件，$^--所有的依赖文件，$<--第一个依赖文件。

3.动态库的编译
gcc -shared -o libshared.so   //动态库的命名形式，要加lib 和 so
example: c62b编译动态库
/opt/buildroot-gcc463/usr/bin/mipsel-buildroot-linux-uclibc-gcc -Wall -shared -fPIC devctrl_c62b.c -o libdevctrl.so
/opt/buildroot-gcc463/usr/bin/mipsel-buildroot-linux-uclibc-gcc -Wall -shared -fPIC pcm_api.c pcm_func_7628.c -o libpcmapi.mt7620.so
/opt/buildroot-gcc463/usr/bin/mipsel-buildroot-linux-uclibc-gcc -L. -lpcmapi.mt7620 test.c -o libtest
